# -*- coding: utf-8 -*-
"""
Created on Tue Aug  8 12:50:17 2023

@author: Amar Doshi
"""

'''
The Problem
-----------
There are n lines of people waiting for food, and the number of people waiting
in each line is known. Then, each of m new people will arrive, and they
will join the shortest line (the line with the fewest number of people). Our
task is to determine the number of people in each line that each of the m
people joins.

Input:
The input contains one test case. The first line contains two positive integers,
n and m, giving the number of lines and number of new people, respectively.
n and m are at most 100. The second line contains n positive integers,
giving the number of people in each line before the new people arrive. Each
of these integers is at most 100.

Hereâ€™s the input for the above test case:
3 4
3 2 5

Output:
For each of the m new people, output a line containing the number of people
in the line that they join.
Valid output for the above test case is
2
3
3
4

The time limit for solving the test case is three seconds.

- DMOJ problem lkp18c2p1

Note: Food Lines is originally from the 2018 LKP Contest 2, hosted by DMOJ.
'''

print()

from array import array

n = 3
m = 4

lines = array('B', (3, 2, 5))

for _ in range(m):
    p = 0

    for i in range(1, n):
        if lines[i] < lines[p]:
            p = i

    print(lines[p])
    lines[p] += 1
